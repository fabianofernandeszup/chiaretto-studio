name: Publish

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  CHECK_CONTENT:
    environment: 'prd-eng'
    runs-on: ubuntu-20.04
    outputs:
      dirs-plugins: ${{ steps.files.outputs.dirs-plugins }}
      dirs-actions: ${{ steps.files.outputs.dirs-actions }}
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Check changes
        uses: dorny/paths-filter@v2
        id: filter_shell
        with:
          list-files: shell
          filters: |
            content:
              - './actions/**'
              - './plugins/**'
              - '.github/workflows/**'

      - name: Publish Plugins
        id: files
        run: |
          arrAllFilesChanged=(${{ steps.filter_shell.outputs.content_files }})
          arrAllDirs=()
          ################# Check File or dir #########################
          for counter in ${!arrAllFilesChanged[*]}; do
            if [[ -d "${{ github.workspace }}/${arrAllFilesChanged[counter]}" ]]; then
                arrAllDirs=(${arrAllDirs[@]} "${arrAllFilesChanged[counter]}")
            else
                arrAllDirs=(${arrAllDirs[@]} "${arrAllFilesChanged[counter]%/*}")
            fi
          done

          ###### Filter Uniq Dir #########
          readarray -t arrAllDirs < <(printf '%s\n' "${arrAllDirs[@]}" | sort -u)

          ###### Publish #########
          arrPluginsDir=()
          arrActionsDir=()
          for i in ${arrAllDirs[@]}; do
            if [[ -f "${{ github.workspace }}/${i}/plugin.yaml" ]]; then
              arrPluginsDir=(${arrPluginsDir[@]} "${i}")
          #              cd $i
          #              ~/.stk/bin/stk publish plugin --studio $STK_STUDIO || true
          #              echo "###########################################"
            fi
            if [[ -f "${{ github.workspace }}/${i}/action.yaml" ]]; then
              arrActionsDir=(${arrActionsDir[@]} "${i}")
          #              cd $i
          #              ~/.stk/bin/stk publish action --studio $STK_STUDIO || true
          #              echo "###########################################"
            fi
          done

          echo "dirs-plugins=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${arrPluginsDir[@]}")" >> "$GITHUB_OUTPUT"
          echo "dirs-actions=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${arrActionsDir[@]}")" >> "$GITHUB_OUTPUT"


  INSTALL_STK:
    runs-on: ubuntu-latest
    needs: CHECK_CONTENT
    steps:
      - name: Install STK CLI
        run: |
          curl -fsSL https://stk.stackspot.com/install.sh | bash
          ~/.stk/bin/stk upgrade

      - name: Version STK CLI
        run: |
          ~/.stk/bin/stk --version

      - name: Login
        run: ~/.stk/bin/stk login --client-id $STK_CLIENT_ID --client-key $STK_CLIENT_KEY --realm $STK_REALM
        env:
          STK_REALM: ${{ vars.stk_realm }}
          STK_STUDIO: ${{ vars.stk_studio }}
          STK_CLIENT_ID: ${{ secrets.stk_client_id }}
          STK_CLIENT_KEY: ${{ secrets.stk_client_key }}

      - name: Cache Stk Cli
        uses: actions/cache/save@v3
        with:
          path: ~/.stk
          key: ${{ runner.os }}-stk

  PUBLISH_PLUGINS:
    runs-on: ubuntu-latest
    needs: INSTALL_STK
    strategy:
      matrix:
        dir: ${{ fromJson(needs.CHECK_CONTENT.outputs.dirs-plugins) }}
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Restore Stk CLI
        uses: actions/cache/restore@v3
        with:
          path: ~/.stk
          key: ${{ runner.os }}-stk

      - run: |
          ~/.stk --version
          echo "Plugin ${{ github.workspace }}/${{ matrix.dir }}"
        env:
          STK_STUDIO: ${{ vars.stk_studio }}

  PUBLISH_ACTIONS:
    runs-on: ubuntu-latest
    needs: CHECK_CONTENT
    strategy:
      matrix:
        dir: ${{ fromJson(needs.CHECK_CONTENT.outputs.dirs-actions) }}
    steps:
      - uses: actions/checkout@v2.3.4
      - run: |
          echo "Action ${{ github.workspace }}/${{ matrix.dir }}"
